{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxim\\\\Documents\\\\Code\\\\React\\\\dofus-items\\\\src\\\\components\\\\RecipeCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../css/RecipeCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeCard = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Récupérer l'ID de l'élément depuis l'URL\n  const [recipe, setRecipe] = useState(null); // État pour stocker les données de la recette\n  const [ingredients, setIngredients] = useState([]); // État pour stocker les détails des ingrédients\n  const [loading, setLoading] = useState(true); // État pour gérer le chargement\n  const [error, setError] = useState(null); // État pour gérer les erreurs\n\n  useEffect(() => {\n    // Fonction pour récupérer les détails de la recette\n    const fetchRecipe = async () => {\n      try {\n        const response = await axios.get(`https://api.dofusdb.fr/recipes?resultId=${id}`);\n        const recipeData = response.data.data[0];\n        setRecipe(recipeData); // Stocker les données de la recette\n\n        // Récupérer les détails des ingrédients\n        const ingredientPromises = recipeData.ingredientIds.map(ingredientId => axios.get(`https://api.dofusdb.fr/items/${ingredientId}`));\n        const ingredientResponses = await Promise.all(ingredientPromises);\n        const ingredientDetails = ingredientResponses.map(response => response.data);\n        setIngredients(ingredientDetails); // Stocker les détails des ingrédients\n      } catch (error) {\n        setError(\"Erreur lors de la récupération des données de la recette.\");\n      } finally {\n        setLoading(false); // Fin du chargement\n      }\n    };\n    fetchRecipe();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Recette pour l'\\xE9l\\xE9ment ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), recipe && ingredients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingr\\xE9dients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipe.ingredientIds.map((ingredientId, index) => {\n          const ingredient = ingredients.find(item => item.id === ingredientId);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [ingredient.name.fr, \": \", recipe.quantities[index]]\n          }, ingredientId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Retour \\xE0 l'accueil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeCard, \"I8SV66XXb+nXHETJp9nx0EbowNM=\", false, function () {\n  return [useParams];\n});\n_c = RecipeCard;\nexport default RecipeCard;\nvar _c;\n$RefreshReg$(_c, \"RecipeCard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","jsxDEV","_jsxDEV","RecipeCard","_s","id","recipe","setRecipe","ingredients","setIngredients","loading","setLoading","error","setError","fetchRecipe","response","get","recipeData","data","ingredientPromises","ingredientIds","map","ingredientId","ingredientResponses","Promise","all","ingredientDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","ingredient","find","item","name","fr","quantities","to","_c","$RefreshReg$"],"sources":["C:/Users/maxim/Documents/Code/React/dofus-items/src/components/RecipeCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../css/RecipeCard.css\";\r\n\r\nconst RecipeCard = () => {\r\n  const { id } = useParams(); // Récupérer l'ID de l'élément depuis l'URL\r\n  const [recipe, setRecipe] = useState(null); // État pour stocker les données de la recette\r\n  const [ingredients, setIngredients] = useState([]); // État pour stocker les détails des ingrédients\r\n  const [loading, setLoading] = useState(true); // État pour gérer le chargement\r\n  const [error, setError] = useState(null); // État pour gérer les erreurs\r\n\r\n  useEffect(() => {\r\n    // Fonction pour récupérer les détails de la recette\r\n    const fetchRecipe = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.dofusdb.fr/recipes?resultId=${id}`\r\n        );\r\n        const recipeData = response.data.data[0];\r\n        setRecipe(recipeData); // Stocker les données de la recette\r\n\r\n        // Récupérer les détails des ingrédients\r\n        const ingredientPromises = recipeData.ingredientIds.map(\r\n          (ingredientId) =>\r\n            axios.get(`https://api.dofusdb.fr/items/${ingredientId}`)\r\n        );\r\n\r\n        const ingredientResponses = await Promise.all(ingredientPromises);\r\n        const ingredientDetails = ingredientResponses.map(\r\n          (response) => response.data\r\n        );\r\n\r\n        setIngredients(ingredientDetails); // Stocker les détails des ingrédients\r\n      } catch (error) {\r\n        setError(\"Erreur lors de la récupération des données de la recette.\");\r\n      } finally {\r\n        setLoading(false); // Fin du chargement\r\n      }\r\n    };\r\n\r\n    fetchRecipe();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"recipe-card\">\r\n      <h2>Recette pour l'élément ID: {id}</h2>\r\n      {loading && <p>Chargement...</p>}\r\n      {error && <p>{error}</p>}\r\n      {recipe && ingredients.length > 0 && (\r\n        <div>\r\n          <h3>Ingrédients</h3>\r\n          <ul>\r\n            {recipe.ingredientIds.map((ingredientId, index) => {\r\n              const ingredient = ingredients.find(\r\n                (item) => item.id === ingredientId\r\n              );\r\n              return (\r\n                <li key={ingredientId}>\r\n                  {ingredient.name.fr}: {recipe.quantities[index]}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <Link to=\"/\">Retour à l'accueil</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}