{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxim\\\\Documents\\\\Code\\\\React\\\\dofus-items\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ItemCard from \"./components/ItemCard\";\nimport Pagination from \"./components/navigation/Pagination\";\nimport RecipeCard from \"./components/RecipeCard\";\nimport \"./css/App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 50;\nconst TYPE_IDS = [1, 82, 9, 11, 10, 16, 17];\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [page, setPage] = useState(1);\n  const [selectedItemId, setSelectedItemId] = useState(null); // État pour gérer l'item sélectionné\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const typeIdParams = TYPE_IDS.map(id => `typeId=${id}`).join(\"&\");\n        const response = await axios.get(`https://api.dofusdb.fr/items?$limit=${ITEMS_PER_PAGE}&$skip=${(page - 1) * ITEMS_PER_PAGE}&${typeIdParams}`);\n        setItems(response.data.data);\n        setTotalItems(response.data.total);\n      } catch (error) {\n        console.error(\"Error fetching items:\", error);\n      }\n    };\n    fetchItems();\n  }, [page]);\n  const totalPages = Math.ceil(totalItems / ITEMS_PER_PAGE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Items DofusDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), selectedItemId ? /*#__PURE__*/_jsxDEV(RecipeCard, {\n      itemId: selectedItemId,\n      onClose: () => setSelectedItemId(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [items.length > 0 ? items.map(item => /*#__PURE__*/_jsxDEV(ItemCard, {\n        item: item,\n        onShowRecipe: () => setSelectedItemId(item.id) // Passer l'id de l'item à afficher\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun item correspondant aux crit\\xE8res.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        page: page,\n        totalPages: totalPages,\n        onPageChange: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nDDYx4NEKeM4OIG7NIscxoxSdFs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ItemCard","Pagination","RecipeCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ITEMS_PER_PAGE","TYPE_IDS","App","_s","items","setItems","totalItems","setTotalItems","page","setPage","selectedItemId","setSelectedItemId","fetchItems","typeIdParams","map","id","join","response","get","data","total","error","console","totalPages","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","itemId","onClose","length","item","onShowRecipe","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/maxim/Documents/Code/React/dofus-items/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ItemCard from \"./components/ItemCard\";\nimport Pagination from \"./components/navigation/Pagination\";\nimport RecipeCard from \"./components/RecipeCard\";\nimport \"./css/App.css\";\n\nconst ITEMS_PER_PAGE = 50;\nconst TYPE_IDS = [1, 82, 9, 11, 10, 16, 17];\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [page, setPage] = useState(1);\n  const [selectedItemId, setSelectedItemId] = useState(null); // État pour gérer l'item sélectionné\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const typeIdParams = TYPE_IDS.map((id) => `typeId=${id}`).join(\"&\");\n        const response = await axios.get(\n          `https://api.dofusdb.fr/items?$limit=${ITEMS_PER_PAGE}&$skip=${\n            (page - 1) * ITEMS_PER_PAGE\n          }&${typeIdParams}`\n        );\n\n        setItems(response.data.data);\n        setTotalItems(response.data.total);\n      } catch (error) {\n        console.error(\"Error fetching items:\", error);\n      }\n    };\n\n    fetchItems();\n  }, [page]);\n\n  const totalPages = Math.ceil(totalItems / ITEMS_PER_PAGE);\n\n  return (\n    <div className=\"App\">\n      <h1>Items DofusDB</h1>\n      {selectedItemId ? (\n        <RecipeCard\n          itemId={selectedItemId}\n          onClose={() => setSelectedItemId(null)}\n        />\n      ) : (\n        <>\n          {items.length > 0 ? (\n            items.map((item) => (\n              <ItemCard\n                key={item.id}\n                item={item}\n                onShowRecipe={() => setSelectedItemId(item.id)} // Passer l'id de l'item à afficher\n              />\n            ))\n          ) : (\n            <p>Aucun item correspondant aux critères.</p>\n          )}\n          <Pagination\n            page={page}\n            totalPages={totalPages}\n            onPageChange={setPage}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}